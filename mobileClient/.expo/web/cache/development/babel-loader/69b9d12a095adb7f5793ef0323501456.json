{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\royli\\\\Desktop\\\\FittoApp\\\\src\\\\Screens\\\\UserScreen.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nvar firstLoading = true;\n\nvar UserScreen = function UserScreen() {\n  var backendURL = \"https://sheltered-woodland-33515.herokuapp.com\";\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      address = _useState6[0],\n      setAddress = _useState6[1];\n\n  var _useState7 = useState(new Date(1598051730000)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      birthday = _useState8[0],\n      setBirthday = _useState8[1];\n\n  var _useState9 = useState(\"date\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      mode = _useState10[0],\n      setMode = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      show = _useState12[0],\n      setShow = _useState12[1];\n\n  var onChangeDate = function onChangeDate(event, selectedDate) {\n    var currentDate = selectedDate || birthday;\n    setShow(Platform.OS === \"ios\");\n    var tempDate = new Date(currentDate);\n    setBirthday(tempDate);\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    showMode(\"date\");\n  };\n\n  useEffect(function () {\n    if (firstLoading === true) {\n      fetch(backendURL + \"/profile/data\").then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        setUsername(json.userName);\n        var birthday = json.birthday;\n        setBirthday(new Date(birthday.year, birthday.month, birthday.day));\n        setAddress(json.address.street);\n        setEmail(json.email);\n        firstLoading = false;\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    }\n  });\n\n  var UpdateProfileData = function UpdateProfileData() {};\n\n  return React.createElement(SafeAreaView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    value: username,\n    onChangeText: function onChangeText(val) {\n      return setUsername(val);\n    },\n    placeholder: username,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.space,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Enter Your Birthday\",\n    onPress: showDatepicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), show && React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: birthday,\n    mode: mode,\n    is24Hour: true,\n    display: \"default\",\n    onChange: onChangeDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      padding: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, birthday.getDate() + \" / \" + birthday.getMonth() + \" / \" + birthday.getFullYear()), React.createElement(View, {\n    style: styles.space,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    value: email,\n    onChangeText: function onChangeText(val) {\n      return setEmail(val);\n    },\n    keyboardType: \"email-address\",\n    placeholder: email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    value: address,\n    onChangeText: function onChangeText(val) {\n      return setAddress(val);\n    },\n    placeholder: address,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.spaceEnding,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Update\",\n    onPress: function onPress() {\n      UpdateProfileData();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  space: {\n    width: 20,\n    height: 20\n  },\n  spaceEnding: {\n    width: 20,\n    height: 80\n  }\n});\nexport default UserScreen;","map":{"version":3,"sources":["C:/Users/royli/Desktop/FittoApp/src/Screens/UserScreen.js"],"names":["React","useState","useEffect","DateTimePicker","firstLoading","UserScreen","backendURL","username","setUsername","email","setEmail","address","setAddress","Date","birthday","setBirthday","mode","setMode","show","setShow","onChangeDate","event","selectedDate","currentDate","Platform","OS","tempDate","showMode","currentMode","showDatepicker","fetch","then","response","json","userName","year","month","day","street","catch","error","console","UpdateProfileData","styles","input","val","space","textAlign","padding","getDate","getMonth","getFullYear","spaceEnding","StyleSheet","create","height","margin","borderWidth","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  KeyboardAvoidingView,\r\n  Button,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  View,\r\n} from \"react-native\";\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\n\r\nlet firstLoading = true;\r\n\r\nconst UserScreen = () => {\r\n  const backendURL = \"https://sheltered-woodland-33515.herokuapp.com\";\r\n\r\n  // Hooks for name and Email\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [birthday, setBirthday] = useState(new Date(1598051730000));\r\n\r\n  // Hooks for date object\r\n  const [mode, setMode] = useState(\"date\");\r\n  const [show, setShow] = useState(false);\r\n\r\n  //Function that return date as a string to be storeable more easliy\r\n  const onChangeDate = (event, selectedDate) => {\r\n    const currentDate = selectedDate || birthday;\r\n    setShow(Platform.OS === \"ios\");\r\n\r\n    let tempDate = new Date(currentDate);\r\n    // let birthday =\r\n    //   tempDate.getDate().toString() +\r\n    //   \"/\" +\r\n    //   tempDate.getMonth().toString() +\r\n    //   \"/\" +\r\n    //   tempDate.getYear().toString();\r\n    setBirthday(tempDate);\r\n  };\r\n\r\n  // upon entering this component into the dom, fetch data and update accordingly\r\n\r\n  const showMode = (currentMode) => {\r\n    setShow(true);\r\n    setMode(currentMode);\r\n  };\r\n\r\n  const showDatepicker = () => {\r\n    showMode(\"date\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstLoading === true) {\r\n      fetch(`${backendURL}/profile/data`)\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          // console.log(json);\r\n          setUsername(json.userName);\r\n          let { birthday } = json;\r\n          setBirthday(new Date(birthday.year, birthday.month, birthday.day));\r\n          setAddress(json.address.street);\r\n          setEmail(json.email);\r\n          firstLoading = false;\r\n        })\r\n        .catch((error) => console.error(error));\r\n    }\r\n  });\r\n\r\n  // push to the backend\r\n  const UpdateProfileData = () => {};\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      {/* Button for full name */}\r\n      <TextInput\r\n        style={styles.input}\r\n        value={username}\r\n        onChangeText={(val) => setUsername(val)}\r\n        placeholder={username}\r\n      />\r\n\r\n      <View style={styles.space} />\r\n\r\n      {/* Button for Date name */}\r\n      <Button title=\"Enter Your Birthday\" onPress={showDatepicker} />\r\n      {show && (\r\n        <DateTimePicker\r\n          testID=\"dateTimePicker\"\r\n          value={birthday}\r\n          mode={mode}\r\n          is24Hour={true}\r\n          display=\"default\"\r\n          onChange={onChangeDate}\r\n        />\r\n      )}\r\n\r\n      <Text\r\n        style={{ textAlign: \"center\", padding: 20 }}\r\n      >{`${birthday.getDate()} / ${birthday.getMonth()} / ${birthday.getFullYear()}`}</Text>\r\n\r\n      <View style={styles.space} />\r\n\r\n      {/* Button for email name */}\r\n      <TextInput\r\n        style={styles.input}\r\n        value={email}\r\n        onChangeText={(val) => setEmail(val)}\r\n        keyboardType=\"email-address\"\r\n        placeholder={email}\r\n      />\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        value={address}\r\n        onChangeText={(val) => setAddress(val)}\r\n        placeholder={address}\r\n      />\r\n\r\n      <View style={styles.spaceEnding} />\r\n\r\n      {/* Add to DB user button */}\r\n      <Button\r\n        title=\"Update\"\r\n        onPress={() => {\r\n          UpdateProfileData();\r\n        }}\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    height: 40,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n  },\r\n  space: {\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  spaceEnding: {\r\n    width: 20,\r\n    height: 80,\r\n  },\r\n});\r\n\r\nexport default UserScreen;\r\n"]},"metadata":{},"sourceType":"module"}